apiVersion: apps/v1
kind: Deployment
metadata:
  name: factory
spec:
  replicas: 1
  selector:
    matchLabels:
      app: factory
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: factory
    spec:
      containers:
      - name: factory
        image: "kerberos/factory:1.0.851209989"
        #imagePullPolicy: Always
        ports:
          - containerPort: 80
        envFrom:
          - configMapRef:
              name: mongodb
        # Injecting the ca-certificates inside the container.
        #volumeMounts:
        #- name: rootcerts
        #  mountPath: /etc/ssl/certs/ca-certificates.crt
        #  subPath: ca-certificates.crt
        env:
        - name: KERBEROS_LOGIN_USERNAME
          value: "root"
        - name: KERBEROS_LOGIN_PASSWORD
          value: "kerberos"

        - name: KERBEROS_AGENT_IMAGE
          value: "kerberos/agent:9d70778"
        - name: KERBEROS_AGENT_MEMORY_LIMIT
          value: "256Mi"

        # Do not touch this, unless you know what you are doing.
        - name: NAMESPACE
          value: "kerberos-factory"
        - name: FACTORY_ENVIRONMENT
          value: "kubernetes"
        - name: K8S_PROXY
          value: http://localhost:80

        # Additional certificates can be injected into the Kerberos Agents, through the creation of a configmap. 
        # A certificate "ca-certificates.crt" is expected in the configmap, and will be added to
        # the Kerberos Agent in following directory: /etc/ssl/certs/
        #- name: CERTIFICATES_CONFIGMAP
        #  value: "rootcerts" 
      #volumes:
      #- name: rootcerts
      #  configMap:
      #    name: rootcerts
---
apiVersion: v1
kind: Service
metadata:
  name: factory
  labels:
    app: factory
spec:
  ports:
  - port: 80
    targetPort: 80
    name: frontend
    protocol: TCP
  selector:
    app: factory
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: factory
  annotations:
    kubernetes.io/ingress.class: traefik
    #kubernetes.io/ingress.class: nginx
    #kubernetes.io/tls-acme: "true"
    #nginx.ingress.kubernetes.io/ssl-redirect: "true"
    #cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  #tls:
  #- hosts:
    #- factory.domain.com
    #secretName: factory-tls
  rules:
  - host: factory.domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: 
            name: factory
            port: 
              number: 80